services:
  rabbitmq:
    image: rabbitmq:management
    container_name: databus-mqtt-rabbitmq
    ports:
      - "5672:5672" # AMQP port
      - "1883:1883" # MQTT port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-admin}
    volumes:
      - ./config/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - databus-mqtt-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: databus-mqtt-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - databus-mqtt-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  subscriber:
    build:
      context: ./subscriber
      dockerfile: Dockerfile
    container_name: databus-mqtt-subscriber
    environment:
      MQTT_HOST: rabbitmq
      MQTT_PORT: 1883
      MQTT_USER: ${RABBITMQ_USER:-admin}
      MQTT_PASS: ${RABBITMQ_PASS:-admin}
      MQTT_TOPIC: ${MQTT_TOPIC:-transit/vehicles/#}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_DB: ${REDIS_DB:-0}
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - databus-mqtt-network
    restart: unless-stopped

volumes:
  rabbitmq_data:
  redis_data:

networks:
  databus-mqtt-network:
    driver: bridge
